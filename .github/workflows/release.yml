on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
    
name: Upload Release Asset

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-16.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install -r requirements-dev.txt
      
      - name: Build project
        shell: bash
        run: |
          make pyinstaller
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      
      # Beacause we can't easily parse the github.ref using github actions syntax, we extract it with an extra step
      # Example:
      # before - refs.tags.v0.3.1
      # after - v0.3.1
      - name: Parse Release Tag
      - id: parse_release
        run: |
          release_tag=$(echo "refs.tags.v0.3.1" | sed -e "s/^refs.tags.//")
          echo "::set-output name=release_tag::$release_tag"

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/kube-hunter
          asset_name: kube-hunter-linux-x86_64-${{ steps.parse_release.outputs.release_tag }}
          asset_content_type: application/octet-stream